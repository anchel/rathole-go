name: Release on Push Tag

permissions:
  contents: write
  actions: write

on:
  push:
    tags:
      - v*
jobs:
  build:
    name: Build Production
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Go environment
        uses: actions/setup-go@v5.1.0
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
          go-version: 1.21

      # 构建后端
      - run: make

      - name: Get Tag and Commit Info
        id: get_commit_info
        run: |
          # 获取标签名称
          TAG_NAME="${{ github.ref_name }}"

          # 获取该标签的提交信息
          COMMIT_INFO=$(git log -1 --pretty=format:"%s" "$TAG_NAME")

          echo "Tag: $TAG_NAME"
          echo "Commit Info:"
          echo "$COMMIT_INFO"

          # 将信息写入文件
          echo "$COMMIT_INFO" > commit_info.txt

      - run: ls -alrth

      - uses: actions/upload-artifact@v4
        id: upload-dist
        with:
          name: dist
          path: |
            commit_info.txt
            build/**/ratholego-*
          retention-days: 1

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.upload-dist.outputs.artifact-id }}'

  release:
    name: Release Production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - run: tree .

      - run: ls -alrth

      - name: create_release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ github.ref_name }}"
          release_name: "Release ${{ github.ref_name }}"
          body_path: "commit_info.txt"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Upload Release Assets
        # You may pin to the exact commit or the version.
        # uses: alexellis/upload-assets@13926a61cdb2cb35f5fdef1c06b8b591523236d3
        uses: alexellis/upload-assets@0.4.1
        with:
          # The paths to the assets you want to upload as a JSON array. You can use a glob pattern.
          asset_paths: '["build/**/ratholego-*"]'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - run: echo 'Release ID is ${{ steps.create_release.outputs.id }}'
